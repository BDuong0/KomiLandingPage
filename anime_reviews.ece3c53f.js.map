{"version":3,"sources":["anime_reviews.js","../../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","anime_reviews","getReviewData","_getReviewData","_callee","response","json_object","_callee$","_context","fetch","json","data","processReviewData","populateHTMLpage","t0","console","strLiteral_to_html","html","template","document","createElement","innerHTML","trim","content","firstElementChild","reviews_wrapper","querySelector","_processReviewData","_callee2","_callee2$","_context2","malUser","output_username","user","username","processed_review","review","replace","temp_pfp","images","jpg","image_url","concat","temp_element","appendChild","all_reviews","querySelectorAll","review_header","review_content","review__collapse_btn","review__collapse_text","content_pText","content_font_size","Number","window","getComputedStyle","getPropertyValue","min_content","entire_content_height","scrollHeight","dataset","btnState","style","setProperty","addEventListener","btn_state","remove","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"anime_reviews.ece3c53f.js","sourceRoot":"..\\src\\pages\\Anime_Reviews","sourcesContent":["\r\nlet anime_reviews = [];\r\n\r\nasync function getReviewData(){\r\n    try {\r\n        // 48926 is the id for Komi can't Communicate Season 1 Anime\r\n        const response = await fetch('https://api.jikan.moe/v4/anime/48926/reviews');\r\n        const json_object = await response.json();\r\n\r\n        // Going to try to use '...' spread operator which essentially spreads the items of an array into separate items\r\n        anime_reviews.push(...json_object.data);\r\n        \r\n        // need the getReviewData() async function to finish populating data before trying to access elements\r\n            // Can't access elements in global scope b/c element access would run before getReviewData() would be finished\r\n            // I can manipulate/process the fetched data how I want inside the processReviewData()\r\n        processReviewData();\r\n        populateHTMLpage(); // Calling this function inside the async function is the only way I can get the API data first and then add the event listeners to work\r\n        // If I don't do this then my reivews will populate but the if (entire_content_height > min_content).... branches won't run in time\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n}\r\n\r\nfunction strLiteral_to_html(html) {\r\n    const template = document.createElement(\"template\");\r\n\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content.firstElementChild;\r\n}\r\n\r\nconst reviews_wrapper = document.querySelector('.review_wrapper');\r\n\r\nasync function processReviewData(){\r\n    anime_reviews.forEach(malUser => {\r\n\r\n        let output_username = malUser.user.username; \r\n        let processed_review = malUser.review.replace(/\\n/g, \"<br>\");\r\n            // Need to process the review because I need to include the \\n characters so user putted in their original review. I don't want just to display one huge block of text.\r\n            // Relpace \"  \" double spaces with consecutive <br> tags\r\n            // \\n = newline character\r\n        let temp_pfp = ``;\r\n    \r\n        // Use svg as default icon if there's no pfp image url or use the image url that's inside the json object as the pfp\r\n        if (malUser.user.images.jpg.image_url.length = 0){\r\n            // console.log('svg');\r\n            temp_pfp = `<svg class=\"pfp__img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"><path fill=\"white\" d=\"M10.561 8.073a6.005 6.005 0 0 1 3.432 5.142a.75.75 0 1 1-1.498.07a4.5 4.5 0 0 0-8.99 0a.75.75 0 0 1-1.498-.07a6.004 6.004 0 0 1 3.431-5.142a3.999 3.999 0 1 1 5.123 0M10.5 5a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0\"/></svg>`\r\n        } else {\r\n            // console.log('img tag');\r\n            temp_pfp = `<img class=\"pfp__img\" src=\"${malUser.user.images.jpg.image_url}\"></img>`;\r\n        }\r\n\r\n        const temp_element = strLiteral_to_html(`\r\n        <div class=\"review\">\r\n            <div class=\"review__header\">\r\n                <div class=\"review__pfp\">\r\n                    ${temp_pfp}\r\n                </div>\r\n                <h3 class=\"review__username ff-accent fw-bold\">${output_username}</h3>\r\n            </div>\r\n            <div class=\"review__content\" data-collapsed=\"false\">\r\n                <p>${processed_review}</p>\r\n            </div>\r\n            <button class=\"review__collapse-btn\" data-btn-state=\"expand\">\r\n                <svg class=\"collapse__icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"m7 10l5 5m0 0l5-5\"/></svg>\r\n                <span class=\"collapse__text\">Read More</span>\r\n            </button>\r\n        </div>\r\n        `)\r\n\r\n        reviews_wrapper.appendChild(temp_element);\r\n    })\r\n}\r\n\r\n\r\nfunction populateHTMLpage() {\r\n    const all_reviews = document.querySelectorAll('.review_wrapper .review');\r\n    \r\n    all_reviews.forEach(review => {\r\n        const review_header = review.querySelector('.review__header');\r\n        const review_content = review.querySelector('.review__content');\r\n        const review__collapse_btn = review.querySelector('.review__collapse-btn');\r\n        const review__collapse_text = review__collapse_btn.querySelector('.collapse__text');\r\n    \r\n        \r\n        const content_pText = review_content.firstElementChild;\r\n        // Wanted to set size of content shown via Javascript b/c I want to account for different content sizes which I can't do easily in CSS\r\n        const content_font_size = Number(window.getComputedStyle(content_pText).getPropertyValue(\"font-size\").replace(/px$/, '')); // Get the font-size without the 'px'\r\n        const min_content = content_font_size * 13;// mimic 13ch which I want as the minimum height of content shown\r\n        const entire_content_height = content_pText.scrollHeight; // Kind of like scrollHeight but without the scrolling. Get the height of the content, including content that overflows.\r\n        \r\n        if (entire_content_height > min_content) { // Only enable collapsible on reviews that have more than 13ch of content\r\n        \r\n            // Set inital state of collpasible content on website load\r\n            review__collapse_btn.dataset.btnState = \"collapse\";\r\n            review_content.style.setProperty(\"grid-template-rows\", min_content + \"px\");\r\n        \r\n            review__collapse_btn.addEventListener('click', e => { \r\n        \r\n                // Could have added transition animations for collapsing and expanding content with simple 0.3fr <-> 1fr with css attributes but wanted to do differently\r\n                    // The only ways I can animate the grid-template-row properties is with ch and fr units which do work but didn't yeild the result I wanted\r\n                    // 0.3fr looks different for different content sizes, but I want all content sizes to collapse at the same point\r\n                    // I get to keep the height: 'auto' / 'fit-content' aspect by expanding the content all the way up to its entire height(scrollHeight)\r\n                    // I get to use mainly just the grid-template-rows property to animate and I hope this yeilds better performance \r\n                    // At the end I still have to use fixed pixel units, which I made auto-calculations for\r\n                let btn_state = review__collapse_btn.dataset.btnState;\r\n                \r\n                // Simple toggle button that toggles between showing extra content and collapsing it\r\n                if (btn_state == \"expand\") {\r\n                    review__collapse_btn.dataset.btnState = \"collapse\";\r\n                    review_content.style.setProperty(\"grid-template-rows\", min_content + \"px\");\r\n                    review__collapse_text.innerHTML = \"Read More\";\r\n                } else if(btn_state == \"collapse\") {\r\n                    review__collapse_btn.dataset.btnState = \"expand\";\r\n                    review_content.style.setProperty(\"grid-template-rows\", entire_content_height + \"px\");\r\n                    review__collapse_text.innerHTML = \"Read Less\";\r\n                }\r\n            })\r\n    \r\n        } else {\r\n            review__collapse_btn.remove();\r\n        }\r\n    \r\n    })\r\n}\r\n\r\ngetReviewData();\r\n// One function sequentially calls others function until previous function is done\r\n//  getReviewData() -> processReviewData() -> populateHTMLpage();\r\n\r\n\r\n\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}